{"version":3,"sources":["../index.js"],"names":["styles","rectangleStyles","addSpan","template","document","createElement","innerHTML","template1","rectTemplate","CSSToggle","attachShadow","mode","theme","getAttribute","includes","shadowRoot","appendChild","content","cloneNode","btn","querySelector","onLabel","offLabel","classList","add","knobs","setAttribute","span","textContent","window","customElements","define"],"mappings":";;;AAyFA,aAAA,IAAA,EAAA,WAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,OAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAzFA,EAAA,QAAA,MAyFA,EAAA,EAAA,GAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,GAAA,iBAAA,GAAA,mBAAA,EAAA,EAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,kEAAA,GAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,YAAA,EAAA,UAAA,EAAA,cAAA,KAAA,IAAA,OAAA,eAAA,OAAA,eAAA,EAAA,GAAA,EAAA,UAAA,GAAA,SAAA,IAAA,OAAA,QAAA,UAAA,YAAA,GAAA,KAAA,UAAA,aAAA,OAAA,eAAA,EAAA,UAAA,YAAA,WAAA,OAAA,eAAA,EAAA,aAvFA,IAAMA,EAAN,89gBACMC,EAAkB,CACtB,aACA,YACA,YACA,YACA,cACA,cACA,cACA,cACA,eAGIC,EAAU,CAAC,OAAQ,UAAW,YAE9BC,EAAWC,SAASC,cAAc,YAExCF,EAASG,UAEPN,gBAAAA,EAFF,gRAYA,IAAMO,EAAN,sQAQMC,EAAeJ,SAASC,cAAc,YAC5CG,EAAaF,UAETN,kBAAAA,EAFJ,2UAaMS,IAAAA,EAAAA,SAAAA,GACU,SAAA,IAAA,EAAA,KAAA,GAAA,IAAA,EAAA,EAAA,MAAA,EAAA,WAAA,OAAA,eAAA,IAAA,KAAA,OAEPC,EAAAA,aAAa,CAAEC,KAAM,SACpBC,IAAAA,EAAQ,EAAKC,aAAa,UAAY,QAHhC,OAIRZ,EAAgBa,SAASF,GACtBG,EAAAA,WAAWC,YAAYR,EAAaS,QAAQC,WAAU,IAEtDH,EAAAA,WAAWC,YAAYb,EAASc,QAAQC,WAAU,IAP7C,EAmChB,OAAA,EAAA,EAAA,GAAA,EAAA,EAAA,CAAA,CAAA,IAAA,oBAxBsB,MAAA,WACZC,IAAAA,EAAM,KAAKJ,WAAWK,cAAc,WACpCR,EAAQ,KAAKC,aAAa,UAAY,QACtCQ,EAAU,KAAKR,aAAa,aAAe,IAC3CS,EAAW,KAAKT,aAAa,cAAgB,IAC/CU,EAAAA,UAAUC,IAAIZ,GAEZa,IAAAA,EAAQ,KAAKV,WAAWK,cAAc,UAGxClB,GAFEwB,EAAAA,aAAa,WAAYL,GACzBK,EAAAA,aAAa,UAAWJ,GAC1BpB,EAAQY,SAASF,GAAQ,CACrBe,IAAAA,EAAOvB,SAASC,cAAc,QAC/BqB,EAAAA,aAAa,WAAYL,GACzBK,EAAAA,aAAa,UAAWJ,GACvBN,EAAAA,YAAYW,GAGN,eAAVf,IACW,KAAKG,WAAWK,cAAc,QACtCQ,YAAcP,OAKzB,EApCMZ,GAoCNoB,OAAOC,eAAeC,OAAO,aAActB","file":"css-toggle.aca990f8.map","sourceRoot":"../public","sourcesContent":["import fs from \"fs\";\n\nconst styles = fs.readFileSync(__dirname + \"/styles/main.css\", \"utf8\");\nconst rectangleStyles = [\n  \"rect-slide\",\n  \"rect-flip\",\n  \"rect-move\",\n  \"rect-hide\",\n  \"rect-updown\",\n  \"rect-zoomin\",\n  \"rect-slide2\",\n  \"rect-slide3\",\n  \"rect-slide4\"\n];\n\nconst addSpan = [\"flip\", \"fadeout\", \"slideall\"];\n\nconst template = document.createElement(\"template\");\n\ntemplate.innerHTML = `\n  <style>\n${styles}\n\n</style>\n<div class=\"button r\" role=\"switch\" aria-label=\"CSS Toggle Button\" aria-checked=\"true\">\n  <input type=\"checkbox\" class=\"checkbox\" aria-label=\"CSS Toggle Button\">\n  <div class=\"knobs\" data-yes=\"✔\" data-no=\"✕\"></div>\n  <div class=\"layer\"></div>\n</div>\n`;\n\nconst template1 = `\n<div class=\"button r\" role=\"switch\" aria-label=\"CSS Toggle Button\" aria-checked=\"true\">\n  <input type=\"checkbox\" class=\"checkbox\" aria-label=\"CSS Toggle Button\">\n  <div class=\"knobs\" data-yes=\"✔\" data-no=\"✕\"></div>\n  <div class=\"layer\"></div>\n</div>\n  `;\n\nconst rectTemplate = document.createElement(\"template\");\nrectTemplate.innerHTML = `\n  <style>\n  ${styles}\n\n  </style>\n        <div class=\"button b2\" role=\"switch\" aria-label=\"CSS Toggle Button\" aria-checked=\"true\">\n          <input type=\"checkbox\" class=\"checkbox\" aria-label=\"CSS Toggle Button\">\n          <div class=\"knobs\">\n            <span></span>\n          </div>\n          <div class=\"layer\"></div>\n        </div>\n  `;\nclass CSSToggle extends HTMLElement {\n  constructor() {\n    super();\n    this.attachShadow({ mode: \"open\" });\n    const theme = this.getAttribute(\"theme\") || \"slide\";\n    if (rectangleStyles.includes(theme)) {\n      this.shadowRoot.appendChild(rectTemplate.content.cloneNode(true));\n    } else {\n      this.shadowRoot.appendChild(template.content.cloneNode(true));\n    }\n  }\n\n  connectedCallback() {\n    const btn = this.shadowRoot.querySelector(\".button\");\n    const theme = this.getAttribute(\"theme\") || \"slide\";\n    const onLabel = this.getAttribute(\"on-label\") || \"✔\";\n    const offLabel = this.getAttribute(\"off-label\") || \"✕\";\n    btn.classList.add(theme);\n\n    const knobs = this.shadowRoot.querySelector(\".knobs\");\n    knobs.setAttribute(\"data-yes\", onLabel);\n    knobs.setAttribute(\"data-no\", offLabel);\n    if (addSpan.includes(theme)) {\n      const span = document.createElement(\"span\");\n      span.setAttribute(\"data-yes\", onLabel);\n      span.setAttribute(\"data-no\", offLabel);\n      knobs.appendChild(span);\n    }\n\n    if (theme === \"rect-slide\") {\n      const span = this.shadowRoot.querySelector(\"span\");\n      span.textContent = onLabel;\n    }\n  }\n}\n\nwindow.customElements.define(\"css-toggle\", CSSToggle);\n"]}